name: Rebuild package and its dependencies

on:
  workflow_dispatch:
    inputs:
      package:
        required: true
        description: 'package to rebuild'

jobs:
  collectdependencies:
    runs-on: ubuntu-latest
    outputs:
      depends: ${{ steps.export-dep.outputs.depends }}
    steps:
      - name: extract list
        run: >-
          docker run
          --rm
          -v $(pwd):/${{ github.workspace }}
          -w ${{ github.workspace }}
          ghcr.io/eweos/docker:master
          bash -c "
          pacman -Syii ${{ github.event.inputs.package }} |
          grep '^Required By' | cut -f 2 -d ':' | xargs -n1
          > deps.txt
          "
      - name: export dependency
        id: export-dep
        run: |
          echo "depends=$(cat deps.txt | jq -cnR '[inputs | select(length>0)]')" >> $GITHUB_OUTPUT

  createproject:
    runs-on: ubuntu-latest
    needs: [collectdependencies]
    if: ${{ needs.collectdependencies.outputs.depends != '[]' }}
    outputs:
      projectid: ${{ steps.create.outputs.projectid }}
    steps:
      - uses: tibdex/github-app-token@v2
        id: gettoken
        with: 
          app_id: ${{ vars.GH_APP_ID }}
          private_key: ${{ secrets.GH_APP_PRIVKEY }}
      - id: create
        env:
          GH_TOKEN: ${{ steps.gettoken.outputs.token }}
        run: |
          PRJNAME="rebuild-${{ github.event.inputs.package }}-`date +%s`"
          gh project copy "5" --title "$PRJNAME" --source-owner eweOS --target-owner eweOS
          echo "projectid=$PRJNAME" >> $GITHUB_OUTPUT

  rebuilddependencies:
    needs: [createproject, collectdependencies]
    strategy:
      fail-fast: false
      matrix:
        package: ${{fromJson(needs.collectdependencies.outputs.depends)}}
    uses: ./.github/workflows/bump_rel.yml
    with:
      package: ${{ matrix.package }}
      reason: rebuild against ${{ github.event.inputs.package }}
      rebuild: ${{ needs.createproject.outputs.projectid }}
    secrets:
      GH_APP_PRIVKEY: ${{ secrets.GH_APP_PRIVKEY }}
